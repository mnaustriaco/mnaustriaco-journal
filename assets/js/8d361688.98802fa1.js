"use strict";(self.webpackChunkmizuko_journal=self.webpackChunkmizuko_journal||[]).push([[748],{4317:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var i=n(5893),s=n(1151);const o={sidebar_position:3},r="Point of Sale Migration - Shopping Cart Concurrency Solutioning",a={id:"tutorials/shopping-cart-prob",title:"Point of Sale Migration - Shopping Cart Concurrency Solutioning",description:"---",source:"@site/docs/tutorials/shopping-cart-prob.md",sourceDirName:"tutorials",slug:"/tutorials/shopping-cart-prob",permalink:"/docs/tutorials/shopping-cart-prob",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutsSidebar",previous:{title:"Deploying APIs to Server (bare-metal)",permalink:"/docs/tutorials/deploying-apis"},next:{title:"Registering API FQDN to LAN",permalink:"/docs/tutorials/registering-api-fqdn"}},c={},l=[{value:"Context:",id:"context",level:3},{value:"Problem:",id:"problem",level:3}];function h(e){const t={a:"a",code:"code",h1:"h1",h3:"h3",hr:"hr",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"point-of-sale-migration---shopping-cart-concurrency-solutioning",children:"Point of Sale Migration - Shopping Cart Concurrency Solutioning"}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h3,{id:"context",children:"Context:"}),"\n",(0,i.jsxs)(t.p,{children:["An existing system is in place for the client. Below is a simple sequence diagram for the cashier:\r\n",(0,i.jsx)(t.img,{alt:"Old System - Transaction",src:n(3602).Z+"",width:"791",height:"573"})]}),"\n",(0,i.jsx)(t.p,{children:"The effectiveness of this system assumes the simplicity of the current client setup:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"There is only one actor (cashier, owner) , interacting with the device at a time."}),"\n",(0,i.jsx)(t.li,{children:"As such, the sequence of events does not offer a concurrency issue."}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"problem",children:"Problem:"}),"\n",(0,i.jsx)(t.p,{children:"Now, the client wants to move the application to the digital world, while also upgrading their Old System."}),"\n",(0,i.jsx)(t.p,{children:"In this scenario, the store will have a buyer-facing page where the multiple users can interact and checkout items."}),"\n",(0,i.jsxs)(t.p,{children:["Assume the ff. scenario:\r\n",(0,i.jsx)(t.img,{alt:"Multiple Buyers",src:n(6539).Z+"",width:"957",height:"651"})]}),"\n",(0,i.jsxs)(t.p,{children:["One solution is to force update the current ",(0,i.jsx)(t.code,{children:"Item1"})," entities active in the API, but that might incur an unnecessary workload to the\r\ndatabase. Assume that there is ",(0,i.jsx)(t.code,{children:"1,000"})," buyers checking out the remaining item."]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"That would mean an update to the remaining 999 objects once the first transaction completed"}),"."]}),"\n",(0,i.jsxs)(t.p,{children:["Another solution is offline optimistic locking, as outlined by ",(0,i.jsx)(t.a,{href:"https://martinfowler.com/eaaCatalog/optimisticOfflineLock.html",children:"Martin Fowler"}),". As the article says, ",(0,i.jsx)(t.code,{children:"obtaining a lock indi-cating it's okay to go ahead with the changes to the record data."}),". We will be implementing this via the ff:\r\n",(0,i.jsx)(t.img,{alt:"New Sequence",src:n(7979).Z+"",width:"1589",height:"970"})]}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"Transaction API"})," won't be block by the long operations of ",(0,i.jsx)(t.code,{children:"Product Stock API"}),", and can continue to process transactions. assuming that a multiple checkout occurs, it will be first-come-first-serve basis. In an event that 1 out of 3 items requested is unavailable, the user may be given a choice to continue with the transaction. In the backend side, this means a new transactionId must be created.(For tracking how many transactions failed)."]}),"\n",(0,i.jsxs)(t.p,{children:["The product stock can also be queried by the ",(0,i.jsx)(t.code,{children:"Store"})," application. this is to help block subsequent transactions from being requested."]})]})}function d(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},6539:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/multiple-actors-26cb5c3c3f7c2b4fa5f4cb4f93a4f765.png"},7979:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/new-sequence-7ab9f850696fa7e28eee938263585a05.png"},3602:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/old-sequence-f2641e50050dd210a231b34cf07df049.png"},1151:(e,t,n)=>{n.d(t,{Z:()=>a,a:()=>r});var i=n(7294);const s={},o=i.createContext(s);function r(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);