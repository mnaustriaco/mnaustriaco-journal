"use strict";(self.webpackChunkmizuko_journal=self.webpackChunkmizuko_journal||[]).push([[9995],{1309:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>l});var s=n(5893),t=n(1151);const o={sidebar_position:1},c="Introduction",r={id:"apis-doc/PUMA/puma-intro",title:"Introduction",description:"I had the initial curiosity to research notification systems as I've realized I barely touched it within",source:"@site/docs/apis-doc/PUMA/puma-intro.md",sourceDirName:"apis-doc/PUMA",slug:"/apis-doc/PUMA/puma-intro",permalink:"/docs/apis-doc/PUMA/puma-intro",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"apiDocSidebar",previous:{title:"Project PUMA",permalink:"/docs/category/project-puma-1"},next:{title:"Pomelo Modernization",permalink:"/docs/category/pomelo-modernization-1"}},a={},l=[{value:"Tech Used",id:"tech-used",level:3},{value:"PUMA Sequence Diagram",id:"puma-sequence-diagram",level:3}];function d(e){const i={code:"code",h1:"h1",h3:"h3",img:"img",li:"li",p:"p",ul:"ul",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.h1,{id:"introduction",children:"Introduction"}),"\n",(0,s.jsx)(i.p,{children:"I had the initial curiosity to research notification systems as I've realized I barely touched it within\r\nmy whole career. In PuMa (Push, Pull, Mail), the target is to create a reusable notification service which\r\ncan be used by client-specific applications. The ff. are notification types these service will provide:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"MAIL : (TBD)"}),"\n",(0,s.jsx)(i.li,{children:"Push : To limit the scope, Push notification is for web applications only."}),"\n",(0,s.jsx)(i.li,{children:"Pull : Same as push, web applications only."}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"The idea is to:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["Allow APIs to have a notification system that is not invasive to their existing flows","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"PUMA will be an Injectable RestTemplate client to the services."}),"\n",(0,s.jsx)(i.li,{children:"I must also create a helper class for templating. (TBD)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"tech-used",children:"Tech Used"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"Cassandra Database"})," - for storing possibly large amounts of data (especially for push & pull notifications)"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"RabbitMQ"})," - for messaging protocol across the services to allow non-blocking operations. (There is a mention of push notification usage in their documentation but I'm  yet to dive with this concept)."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"Java 17"})," - cause why not."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"Spring Websocket"})," - utilizing Spring as WebSocket topic Publisher."]}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"puma-sequence-diagram",children:"PUMA Sequence Diagram"}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{alt:"Puma Sequence Diagram",src:n(5071).Z+"",width:"1206",height:"928"})}),"\n",(0,s.jsx)(i.p,{children:"In the above simple sequence diagram, I have created the ff:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"puma-rest"}),"- RESTful API for external applications, to send their push notification to end user."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"mail-svc"})," - TBD for Mailing."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"push-svc"})," - Service consuming messages in ",(0,s.jsx)(i.code,{children:"MQ"})," to publish to ",(0,s.jsx)(i.code,{children:"topics"}),"."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"RabbitMQ"})," - as Message Broker across ",(0,s.jsx)(i.code,{children:"puma-rest"}),", ",(0,s.jsx)(i.code,{children:"push-svc"}),", ",(0,s.jsx)(i.code,{children:"mail-svc"}),"."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"Cassandra Database"})," - for persisting notification for later retrieval. (such as ",(0,s.jsx)(i.code,{children:"pull"}),", or a simple ",(0,s.jsx)(i.code,{children:"status"}),")."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"puma-rest-client"})," - is supposedly a helper library for ",(0,s.jsx)(i.code,{children:"puma-rest"})," to enable faster ",(0,s.jsx)(i.code,{children:"message templating"}),"? but\r\nmaybe all this was built-in with the existing libraries."]}),"\n"]})]})}function h(e={}){const{wrapper:i}={...(0,t.a)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},5071:(e,i,n)=>{n.d(i,{Z:()=>s});const s=n.p+"assets/images/PUMA Sequence Diagram-fb6a1692167d721f1f62031b1eda45b5.png"},1151:(e,i,n)=>{n.d(i,{Z:()=>r,a:()=>c});var s=n(7294);const t={},o=s.createContext(t);function c(e){const i=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function r(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),s.createElement(o.Provider,{value:i},e.children)}}}]);