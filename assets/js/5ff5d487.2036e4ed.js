"use strict";(self.webpackChunkmizuko_journal=self.webpackChunkmizuko_journal||[]).push([[5898],{5148:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var n=t(5893),s=t(1151);const r={sidebar_position:1},o="Introduction",c={id:"apis-doc/JASMIN/jasmin-intro",title:"Introduction",description:"JASMIN (Jwt Authentication Server & Microservice INterceptor) is a JWT Resource Server designed for authenticating communication between microservices.",source:"@site/docs/apis-doc/JASMIN/jasmin-intro.md",sourceDirName:"apis-doc/JASMIN",slug:"/apis-doc/JASMIN/jasmin-intro",permalink:"/docs/apis-doc/JASMIN/jasmin-intro",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"apiDocSidebar",previous:{title:"Project JASMIN",permalink:"/docs/category/project-jasmin-1"},next:{title:"JASMIN Server",permalink:"/docs/apis-doc/JASMIN/jasmin-server-intro"}},a={},d=[{value:"Tech Used",id:"tech-used",level:3},{value:"JASMIN Sequence Diagram",id:"jasmin-sequence-diagram",level:3},{value:"Problem Description",id:"problem-description",level:3},{value:"Solution",id:"solution",level:3},{value:"Notes to consider",id:"notes-to-consider",level:3}];function l(e){const i={admonition:"admonition",code:"code",h1:"h1",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.h1,{id:"introduction",children:"Introduction"}),"\n",(0,n.jsx)(i.p,{children:"JASMIN (Jwt Authentication Server & Microservice INterceptor) is a JWT Resource Server designed for authenticating communication between microservices."}),"\n",(0,n.jsx)(i.h3,{id:"tech-used",children:"Tech Used"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"MariaDB"})," - for API Key and its scope Lookup."]}),"\n",(0,n.jsxs)(i.li,{children:[(0,n.jsx)(i.code,{children:"Spring Boot"})," - as the Java Library used to develop the Authentication Server & Interceptor Library."]}),"\n"]}),"\n",(0,n.jsx)(i.h3,{id:"jasmin-sequence-diagram",children:"JASMIN Sequence Diagram"}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.img,{alt:"JASMIN Sequence Diagram",src:t(6280).Z+"",width:"1222",height:"833"})}),"\n",(0,n.jsx)(i.h3,{id:"problem-description",children:"Problem Description"}),"\n",(0,n.jsxs)(i.p,{children:["The ",(0,n.jsx)(i.code,{children:"Microservice Ecosystem"})," might not need to secure APIs within, but once the ecosystem grows where multiple team are taking part in the development process across domain. As such, the project may not\r\nwant certain features to be exposed to another team."]}),"\n",(0,n.jsx)(i.p,{children:"Imagine a scenario where the ff. teams exist within your project:"}),"\n",(0,n.jsxs)(i.ol,{children:["\n",(0,n.jsx)(i.li,{children:"Critical Data Management Team - handling sensitive information of users, such as identifications."}),"\n",(0,n.jsx)(i.li,{children:"Content Management Team - handling content that might be readily available to the public, such as user posts."}),"\n"]}),"\n",(0,n.jsx)(i.p,{children:"Reasonably, Content Management Team might not need a full access to some critical data to perform its function."}),"\n",(0,n.jsx)(i.p,{children:"As such, JASMIN is created to meet the ff. criteria:"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"microservices should follow the principle of least privileges."}),"\n",(0,n.jsx)(i.li,{children:"microservices access should be audited."}),"\n",(0,n.jsx)(i.li,{children:"microservice authentication must happen upon startup. microservices must fail to start if it fails to authenticate itself."}),"\n",(0,n.jsxs)(i.li,{children:["microservice authentication can be disabled within itself for testing. (Testing downstream APIs may require ",(0,n.jsx)(i.code,{children:"mocking the request response"}),")."]}),"\n"]}),"\n",(0,n.jsx)(i.h3,{id:"solution",children:"Solution"}),"\n",(0,n.jsx)(i.p,{children:"JASMIN solves the ff:"}),"\n",(0,n.jsxs)(i.table,{children:[(0,n.jsx)(i.thead,{children:(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.th,{children:"Problem"}),(0,n.jsx)(i.th,{children:"Solution"}),(0,n.jsx)(i.th,{children:"Status"})]})}),(0,n.jsxs)(i.tbody,{children:[(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"microservices should follow the principle of least privileges."}),(0,n.jsx)(i.td,{children:"APIs are onboarded without scopes."}),(0,n.jsx)(i.td,{children:"APIs are added to scope as a whole. A better implementation might be to onboard specific API endpoint set. Thus, providing further security but allowing flexibility"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"microservices access should be audited."}),(0,n.jsx)(i.td,{children:"JASMIN will log the scope update, along with the evidence that such APIs are approved by the providing team."}),(0,n.jsx)(i.td,{children:"Auditing is not yet implemented"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"microservice authentication must happen upon startup. microservices must fail to start if it fails to authenticate itself."}),(0,n.jsx)(i.td,{children:"Interceptor Library are created for each microservices."}),(0,n.jsx)(i.td,{children:"Already implemented via Interceptors"})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsxs)(i.td,{children:["microservice authentication can be disabled within itself for testing. (Testing downstream APIs may require ",(0,n.jsx)(i.code,{children:"mocking the request response"}),")."]}),(0,n.jsx)(i.td,{children:"JASMIN can be disabled via its configurations.*"}),(0,n.jsx)(i.td,{children:"Implementation dictates that if the JASMIN is disabled, downstream API must have JASMIN disabled (or no integration with JASMIN at all). This is applicable especially for integration test cases."})]})]})]}),"\n",(0,n.jsx)(i.p,{children:"* Jasmin configurations can be found in sidebar."}),"\n",(0,n.jsx)(i.h3,{id:"notes-to-consider",children:"Notes to consider"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:["Use JASMIN in conjunction with your Authentication Server of choice. This will ensure that:","\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"JASMIN will be a security layer among your microservice ecosystem."}),"\n",(0,n.jsx)(i.li,{children:"Chosen Auth Server will be a security layer for your ecosystem to the outside world."}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(i.li,{children:"JASMIN does not support endpoint-based scopes as of writing. Author will research this some time."}),"\n"]}),"\n",(0,n.jsx)(i.admonition,{type:"info",children:(0,n.jsx)(i.p,{children:"Using Gateway (Spring Cloud Gateway) is also a recommended approach to expose the Microservice Ecosystem Integrated to JASMIN."})}),"\n",(0,n.jsx)(i.p,{children:"Next steps will show you how to integrate JASMIN with your Microservice Ecosystem."})]})}function h(e={}){const{wrapper:i}={...(0,s.a)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},6280:(e,i,t)=>{t.d(i,{Z:()=>n});const n=t.p+"assets/images/JASMIN Updated-04c65b2e53aa21564f0f48c35e1c7715.png"},1151:(e,i,t)=>{t.d(i,{Z:()=>c,a:()=>o});var n=t(7294);const s={},r=n.createContext(s);function o(e){const i=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),n.createElement(r.Provider,{value:i},e.children)}}}]);